name: 머신러닝 모델이 패키징된 도커 컨테이너 이미지를 빌드하고 도커 허브 레지스트리에 푸시한다.

on:
  # 메인 브랜치에 소스 코드가 푸시되었을 때 워크플로가 실행됨
  push:
    branches: [ main ]
  
  # 깃허브의 '액션' 탭을 통해 워크플로를 직접 실행할 수 있도록 허용함
  workflow_dispatch:

permissions:
id-token: write # OIDC 인증을 위한 id-token 쓰기 권한 추가
contents: read  # 코드 접근을 위한 기본 권한


jobs:
  build:
    runs-on: ubuntu-latest

    steps:

      - name: 체크아웃
        uses: actions/checkout@v2

      - name: 로그인 Azure (OIDC)
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      
      - name: 모델 복원
        run: |
          az ml model download \
            --resource-group wkddlstjd_rg_2771 \
            --workspace-name isjangml \
            --name RoBERTa-SequenceClassification \ 
            --version 1 \ 
            --download-path . && \
          mv RoBERTa-SequenceClassification/* ./webapp/ && \
          rm -r RoBERTa-SequenceClassification

      - name: 도커 허브 로그인
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      
      - name: 깃허브 컨테이너 레지스트리 로그인
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GH_CONTAINER_REGISTRY }}

      - id: GH_REPOSITORY_OWNER
        uses: ASzc/change-string-case-action@v5
        with:
          string: ${{ github.repository_owner }}

      - name: 컨테이너 빌드 후 도커 허브와 깃허브 레지스트리로 동시에 푸시
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/flask-docker-onnx-azure_x86:v1
            ghcr.io/${{ steps.GH_REPOSITORY_OWNER.outputs.lowercase }}/flask-docker-onnx-azure_x86:v1
